<?xml version="1.0" encoding="gb2312"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="report">
<!--       tinclass    Begin          -->
	 <select id="selecttinclass" parameterClass="java.util.Map"
			resultClass="java.util.HashMap">
			select B.* from (
				select A.*,ROWNUM ROWNO,last_value(ROWNUM) over() as total
				 from (select * from tinclass T  order by T.INCODE) A ) B where B.ROWNO between #START# and #END#
	  </select>	
    
	   <select id="selectTinclassById" parameterClass="java.util.Map" resultClass="java.util.HashMap">
			 SELECT INCODE,INNAME FROM tinclass where INCODE = #form_PID#
	   </select>

	  <update id="updateTinclass" parameterClass="java.util.Map">
		    update tinclass set INNAME=#form_pname# where INCODE=#form_pcode#
	  </update>

	  <insert id="addTinclass" parameterClass="java.util.Map">
		  insert into tinclass (INCODE,INNAME) values (#form_pcode#,#form_pname#)
	  </insert>
<!--       tinclass    END          -->    

<!--       Tcorp    Begin          -->
	  <select id="selectTcorp" parameterClass="java.util.Map"
			resultClass="java.util.HashMap">
			select B.* from (
				select A.*,ROWNUM ROWNO,last_value(ROWNUM) over() as total
				 from (select * from Tcorp T
			    <dynamic>
						<isNotEmpty property="form_pname" prepend="where">
							CNAME like '%$form_pname$%'
						</isNotEmpty>
			   </dynamic>
				 order by T.Pk_ccode) A ) B where B.ROWNO between #START# and #END#
	  </select>	

	   <select id="selectTcorpById" parameterClass="java.util.Map" resultClass="java.util.HashMap">
			 SELECT PK_CCODE,CNAME FROM Tcorp where PK_CCODE = #form_PID#
	   </select>

	  <update id="updateTcorp" parameterClass="java.util.Map">
		    update Tcorp set  PK_CCODE=#form_pcode#, CNAME=#form_pname#  where PK_CCODE=#form_pcode#
	  </update>

	  <insert id="addTcorp" parameterClass="java.util.Map">
		  insert into Tcorp (PK_CCODE,CNAME,PK_NC) values (#form_pcode#,#form_pname#,#form_pk_nc#)
	  </insert>
<!--       Tcorp    END          -->    


<!--           Tstock    BEGIN      -->
	  <select id="selectTstock" parameterClass="java.util.Map" resultClass="java.util.HashMap">
			select B.* from (
				select A.*,ROWNUM ROWNO,last_value(ROWNUM) over() as total
				 from (select PK_SCODE,SNAME,PK_UCODE,PK_NC,(select UNAME from Tunit a where a.PK_UCODE=t.PK_UCODE ) as name  from Tstock T order by T.PK_SCODE) A ) B where B.ROWNO between #START# and #END#
	  </select>	

	   <select id="selectTstockById" parameterClass="java.util.Map" resultClass="java.util.HashMap">
			 SELECT PK_SCODE,SNAME,PK_UCODE,PK_NC,(select UNAME from Tunit a where a.PK_UCODE=t.PK_UCODE ) as name FROM Tstock t where t.PK_SCODE = #form_PID#
	   </select>

	  <update id="updateTstock" parameterClass="java.util.Map">
		    update Tstock set PK_SCODE=#form_scode#,SNAME=#form_sname#,PK_UCODE=#form_ucode#  where PK_NC=#form_pk_nc#
	  </update>

	  <insert id="addTstock" parameterClass="java.util.Map">
		  insert into Tstock (PK_SCODE,SNAME,PK_UCODE,PK_NC) values (#form_scode#,#form_sname#,#form_ucode#,#form_pk_nc#)
	  </insert>
<!--       Tcorp    END          -->    


<!--      Toutclass    BEGNI        -->
	  <select id="selectToutclass" parameterClass="java.util.Map"
			resultClass="java.util.HashMap">
			select B.* from (
				select A.*,ROWNUM ROWNO,last_value(ROWNUM) over() as total
				 from (select * from Toutclass T  order by T.OUTCODE
				 ) A ) B where B.ROWNO between #START# and #END#
	  </select>	

	   <select id="selectToutclassById" parameterClass="java.util.Map" resultClass="java.util.HashMap">
			 SELECT OUTCODE,OUTNAME FROM Toutclass where OUTCODE = #form_PID#
	   </select>

	  <update id="updateToutclass" parameterClass="java.util.Map">
		    update Toutclass set OUTCODE=#form_pcode#,OUTNAME=#form_pname# where OUTCODE=#form_pcode#
	  </update>

	  <insert id="addToutclass" parameterClass="java.util.Map">
		  insert into Toutclass (OUTCODE,OUTNAME) values (#form_pcode#,#form_pname#)
	  </insert>
<!--       Tcorp    END          --> 

<!--      Toutdisclass    BEGNI        -->
	  <select id="selectToutdisclass" parameterClass="java.util.Map"
			resultClass="java.util.HashMap">
			select B.* from (
				select A.*,ROWNUM ROWNO,last_value(ROWNUM) over() as total
				 from (select * from Toutdisclass T  order by T.outdiscode) A ) B where B.ROWNO between #START# and #END#
	  </select>	

	   <select id="selectToutdisclassById" parameterClass="java.util.Map" resultClass="java.util.HashMap">
			 SELECT OUTDISCODE,OUTDISNAME FROM Toutdisclass where OUTDISCODE = #form_PID#
	   </select>

	  <update id="updateToutdisclass" parameterClass="java.util.Map">
		    update Toutdisclass set OUTDISCODE=#form_pcode#,OUTDISNAME=#form_pname# where OUTDISCODE=#form_pcode#
	  </update>

	  <insert id="addToutdisclass" parameterClass="java.util.Map">
		  insert into Toutdisclass (OUTDISCODE,OUTDISNAME) values (#form_pcode#,#form_pname#)
	  </insert>
<!--      Toutdisclass    END        -->

<!--      Tindisclass    BEGNI        -->
      <select id="selectTindisclass" parameterClass="java.util.Map"
			resultClass="java.util.HashMap">
			select B.* from (
				select A.*,ROWNUM ROWNO,last_value(ROWNUM) over() as total
				 from (select * from Tindisclass T  order by T.indiscode) A ) B where B.ROWNO between #START# and #END#
	  </select>	

	   <select id="selectTindisclassById" parameterClass="java.util.Map" resultClass="java.util.HashMap">
			 SELECT indiscode,indisname FROM Tindisclass where indiscode = #form_PID#
	   </select>

	  <update id="updateTindisclass" parameterClass="java.util.Map">
		    update Tindisclass set indiscode=#form_pcode#,indisname=#form_pname# where OUTDISCODE=#form_pcode#
	  </update>

	  <insert id="addTindisclass" parameterClass="java.util.Map">
		  insert into Tindisclass (indiscode,indisname) values (#form_pcode#,#form_pname#)
	  </insert>
<!--      Tindisclass    END        -->


<!--      Tunit    BEGNI        -->
 <select id="selectTunit" parameterClass="java.util.Map" resultClass="java.util.HashMap">
			select B.* from (
				select A.*,ROWNUM ROWNO,last_value(ROWNUM) over() as total
				 from (select PK_UCODE,UNAME,PK_CCODE,decode(UTYPE,'1','分厂','2', '库存') as UTYPE,PK_NC from Tunit T  
				  <dynamic>
						<isNotEmpty property="form_pname" prepend="where">
							UNAME like '%$form_pname$%'
						</isNotEmpty>
			      </dynamic>
				 order by T.Pk_ucode) A ) B where B.ROWNO between #START# and #END#
</select>	

 <select id="selectTunitById" parameterClass="java.util.Map" resultClass="java.util.HashMap">
			 SELECT PK_UCODE,UNAME,PK_CCODE,UTYPE,PK_NC from Tunit  where PK_NC = #form_PID#
 </select>

  <update id="updateTunit" parameterClass="java.util.Map">
		    update Tunit set PK_UCODE=#form_pk_ucode#,UNAME=#form_uname#,PK_CCODE=#form_pk_ccode#,UTYPE=#form_utype# where PK_NC=#form_pk_nc#
  </update>

<insert id="addTunit" parameterClass="java.util.Map">
		  insert into Tunit (PK_UCODE,UNAME,PK_CCODE,UTYPE,PK_NC) values (#form_pk_ucode#,#form_uname#,#form_pk_ccode#,#form_utype#,#form_pk_nc#)
</insert>

<!--      Tunit    END        -->


  <select id="selectbd_deptdoc_nc" parameterClass="java.util.Map"
			resultClass="java.util.HashMap">
			select B.* from (
				select A.*,ROWNUM ROWNO,last_value(ROWNUM) over() as total
				 from (select * from bd_deptdoc_nc T 
				 <dynamic>
				<isNotEmpty property="form_pname" prepend="where">
					DEPTNAME like '%$form_pname$%'
				</isNotEmpty>
			    </dynamic>
				 order by T.pk_deptdoc) A ) B where B.ROWNO between #START# and #END#
  </select>	


	<select id="validatePk" parameterClass="java.util.Map" resultClass="java.util.HashMap">
			 SELECT count(*) as PK FROM   <dynamic>
				<isNotEmpty property="form_table" >
				 $form_table$
				</isNotEmpty>
				</dynamic>
			where <dynamic>
				<isNotEmpty property="form_where" >
				 $form_where$
				</isNotEmpty>
		    </dynamic>
	</select>

	<select id="selectyjjb2"  parameterClass="java.util.Map" resultClass="java.util.HashMap">
	     select decode(trim(cherid),'210','(倒包装出库)','108','(倒包装入库)')||p.invname as invname,p.unit,sum(fnum) fsum,sum(innum) insum,sum(outnum) outnum,sum(enum) enum from (
       select cdispatcherid as cherid ,invcode,sum(incount) fnum,0 innum,0 outnum,sum(incount) enum from(
	   select h.cdispatcherid,h.hindate,h.cwarehouseid,b.invcode,b.incount from ic_general_h h,ic_general_b b 
	   where h.vbillcode=b.vbillcode 
		 union all
	  select th.CDISPATCHERID,th.houtdate,th.outsto,substr(tb.vbatchcode,0,6),-tb.outcount from outstorebill_h th,outstorebill_b tb 
	     where th.cbillcode=tb.cbillcode) s  where   s.hindate &lt;  #form_searchdate#
		 and trim(s.cwarehouseid)=#form_stockId# group by invcode,cdispatcherid
		 union all
		 select h.cdispatcherid,b.invcode,0,b.incount,0,b.incount from ic_general_h h,ic_general_b b 
		 where h.vbillcode=b.vbillcode and h.hindate=#form_searchdate# and trim(h.cwarehouseid)=#form_stockId# and h.team=#form_bz#
		 union all
		 select th.CDISPATCHERID,substr(tb.vbatchcode,0,6),0,0,tb.outcount,-tb.outcount from outstorebill_h th,outstorebill_b tb 
		 where th.cbillcode=tb.cbillcode and th.houtdate=#form_searchdate# and trim(th.outsto)=#form_stockId# and th.team=#form_bz#
		 ) rs,bd_invbasdoc p where rs.invcode=p.invcode group by p.invname,p.unit,cherid
	</select>

	<select id="selectybjjb1"  parameterClass="java.util.Map" resultClass="java.util.HashMap">
   select decode(trim(cherid),'210','(倒包装出库)','108','(倒包装入库)')||p.invname as invname ,p.unit,sum(fnum) fsum,sum(innum) insum,sum(outnum) outnum,sum(enum) enum from ( 
   select cdispatcherid as cherid ,invcode,sum(incount) fnum,0 innum,0 outnum,sum(incount) enum from(
   select h.cdispatcherid,h.hindate,h.cwarehouseid,b.invcode,b.incount from ic_general_h h,ic_general_b b where h.vbillcode=b.vbillcode 
   union all
   select th.CDISPATCHERID,th.houtdate,th.outsto,substr(tb.vbatchcode,0,6),-tb.outcount from outstorebill_h th,outstorebill_b tb 
   where th.cbillcode=tb.cbillcode 
   ) s where s.hindate &lt; #form_searchdate# and trim(s.cwarehouseid)=#form_stockId# group by invcode,cdispatcherid
   union all
   select h.cdispatcherid,b.invcode,-b.incount,b.incount,0,0 from ic_general_h h,ic_general_b b 
   where h.vbillcode=b.vbillcode and h.hindate = #form_searchdate# and trim(h.cwarehouseid) = #form_stockId# and h.team = #form_bz#
   union all
   select th.CDISPATCHERID,substr(tb.vbatchcode,0,6),tb.outcount,0,tb.outcount,0 from outstorebill_h th,outstorebill_b tb 
   where th.cbillcode=tb.cbillcode and th.houtdate = #form_searchdate# and trim(th.outsto) = #form_stockId# and th.team = #form_bz#
   ) rs,bd_invbasdoc p where rs.invcode=p.invcode group by invname,p.unit,cherid
	</select>

	<select id="carforGoodTime"  parameterClass="java.util.Map" resultClass="java.util.HashMap">
select B.* from (
				select A.*,ROWNUM ROWNO,last_value(ROWNUM) over() as total
				 from (
	 select nvl((select corpname from carcorp where corpcode = v.corpcode),
           get_onduty_corpname(dbilldate)) corpname,
       v.carcode,
       dbilldate,
       fdbilldate,
       v.requiredate,
       csaleid,
       (select c1.custname from bd_cubasdoc_nc c1,bd_cumandoc_nc c2 where c1.pk_cubasdoc=c2.pk_cubasdoc and c2.pk_cumandoc=ccustomerid) custname,
       fstatus,
       vreceiptcode,
       vnote,
       snum,
       nvl(outnum, 0) outnum,
       ceil(nvl(ruse,0)/60) ruse,
       ceil(nvl(rwait,0)/60) rwait,
       case when enddate is not null then
       ceil(((to_date(enddate, 'yyyy-mm-dd hh24:mi:ss') -
                              to_date(waitdate, 'yyyy-mm-dd hh24:mi:ss')) * 24 * 60*60 -nvl(ruse,0)-nvl(rwait,0))/60) else 0 end rrun,
       case when (waitdate is not null and requiredate is not null) then
       ceil(((to_date(waitdate, 'yyyy-mm-dd hh24:mi:ss') -
                              to_date(requiredate, 'yyyy-mm-dd hh24:mi:ss')) * 24 * 60*60 -nvl(ruse,0)-nvl(rwait,0))/60) else 0 end rdelay
  from (select h.csaleid,
               h.ccustomerid,
               h.fstatus,
               h.vreceiptcode,
               h.vnote,
               h.dbilldate,
               sum(b.nnumber) snum
          from so_sale_nc h, so_saleorder_b_nc b
         where h.csaleid = b.csaleid
 <dynamic>
		<isNotEmpty property="form_begintime" prepend="and">
            h.dbilldate &gt;= #form_begintime#
		 </isNotEmpty>
		 <isNotEmpty property="form_endtime" prepend="and">
            h.dbilldate &lt;= #form_endtime#
		 </isNotEmpty>
		 <isNotEmpty property="form_corpcode" prepend="and">
            h.pk_corp = #form_corpcode#
		 </isNotEmpty>
 </dynamic>
           and h.dr = 0
           and b.dr = 0
         group by h.csaleid,
                  h.ccustomerid,
                  h.fstatus,
                  h.vreceiptcode,
                  h.vnote,
                  h.dbilldate) sh
  left outer join (select b.csourcebillhid,
                          min(h.dbilldate) fdbilldate,
                          sum(nvl(b.noutnum, 0)) outnum
                     from ic_general_h_nc h
                    inner join ic_general_b_nc b on h.cgeneralhid =
                                                    b.cgeneralhid
                    where 
 <dynamic>
	<isNotEmpty property="form_begintime" >
            h.dbilldate &gt;= #form_begintime#
		 </isNotEmpty>
		 <isNotEmpty property="form_endtime" prepend="and">
            h.dbilldate &lt;= #form_endtime#
		 </isNotEmpty>
		 <isNotEmpty property="form_corpcode" prepend="and">
            h.pk_corp = #form_corpcode#
		 </isNotEmpty>
</dynamic>
                      and h.dr = 0
                      and b.dr = 0
                    group by b.csourcebillhid) sr on sh.csaleid =
                                                     sr.csourcebillhid
  left outer join carwork v on csaleid = v.pk_nc_order
  left outer join (select t.pk_nc_order,
                          min(t.waitdate) waitdate,
                          max(t.enddate) enddate,
                          sum((to_date(t.enddate, 'yyyy-mm-dd hh24:mi:ss') -
                              to_date(t.startdate, 'yyyy-mm-dd hh24:mi:ss')) * 24 * 60 * 60) ruse,
                          sum((to_date(t.startdate, 'yyyy-mm-dd hh24:mi:ss') -
                              to_date(t.waitdate, 'yyyy-mm-dd hh24:mi:ss')) * 24 * 60 * 60) rwait
                     from cartest t
                    where t.startdate &lt;&gt; 'NOREG'
                    group by t.pk_nc_order) car on csaleid = car.pk_nc_order
					) A ) B where B.ROWNO between #START# and #END#
	</select>


	<select id='cargoodview' parameterClass="java.util.Map" resultClass="java.util.HashMap">
	   select s.storname,
       h.vbillcode,
       sum(b.nshouldoutnum) nshouldoutnum,
       sum(nvl(b.noutnum,0)) noutnum,
       t.waitdate,
       t.startdate,
       t.enddate,
       case when (t.startdate is not null and t.startdate &lt;&gt; 'NOREG') then
       ceil((to_date(t.startdate, 'yyyy-mm-dd hh24:mi:ss') -
                              to_date(t.waitdate, 'yyyy-mm-dd hh24:mi:ss')) * 24 * 60) else 0 end twait,

       case when (t.startdate &lt;&gt; 'NOREG' and t.enddate is not null) then
       ceil((to_date(t.enddate, 'yyyy-mm-dd hh24:mi:ss') -
                              to_date(t.startdate, 'yyyy-mm-dd hh24:mi:ss')) * 24 * 60) else 0 end tuse,

       case when (t.startdate &lt;&gt; 'NOREG' and t.enddate is not null) then
       ceil(((to_date(t.enddate, 'yyyy-mm-dd hh24:mi:ss') -
                              to_date(t.startdate, 'yyyy-mm-dd hh24:mi:ss')) * 24 * 60*60-t.planuse)/60) else 0 end tex,

       GET_RUNTIME(t.pk_nc_order,t.enddate,t.waitdate) trun    
  from  ic_general_h_nc h inner join ic_general_b_nc b on h.cgeneralhid=b.cgeneralhid
  inner join  bd_stordoc_nc s on h.cwarehouseid=s.pk_stordoc 
  left outer join ( select * from cartest where startdate&lt;&gt;'NOREG') t on t.pk_nc_out = h.cgeneralhid
  where b.csourcebillhid=#form_PID# and h.cbilltypecode='4C' and h.dr=0 and b.dr=0 and h.pk_corp=1001
   group by s.storname,
       h.vbillcode,
       t.waitdate,
       t.startdate,
       t.enddate,t.planuse,t.pk_nc_order
	   
	</select>

	<select id='diaobocount'  parameterClass="java.util.Map" resultClass="java.util.HashMap">
	  select substr(h.houtdate, 1, 4) || substr(h.houtdate, 6, 2) ||
       substr(h.houtdate, 9, 2) || b.carcode || b.carnum || h.team cbillid,
       u.uname,
       b.carcode,
       b.carnum,
       min(b.outdate) stdate,
       max(b.outdate) enddate,
       ih.ts
  from outstorebill_h h, outstorebill_b b, tunit u, in_general_h ih
 where h.cbillcode = b.cbillcode
   and b.sign = 0
   and substr(h.cbillcode, 7, 3) = u.pk_ucode
   and substr(h.houtdate, 1, 4) || substr(h.houtdate, 6, 2) ||
       substr(h.houtdate, 9, 2) || b.carcode || b.carnum || h.team =
       ih.csourcebillhid
   <dynamic>
		<isNotEmpty property="form_begintime" prepend="and">
            h.houtdate &gt;= #form_begintime#
		 </isNotEmpty>
		 <isNotEmpty property="form_endtime" prepend="and">
            h.houtdate &lt;= #form_endtime#
		 </isNotEmpty>
		 <isNotEmpty property="form_factory" prepend="and">
		 pk_ucode = #form_factory#
		  </isNotEmpty>
</dynamic>

 group by h.houtdate, b.carcode, b.carnum, h.team, u.uname,ih.ts

	</select>

	 <select id="selectstockByfacId" parameterClass="java.util.Map" resultClass="java.util.HashMap">
			 SELECT PK_SCODE,SNAME FROM Tstock t where t.Pk_ucode = #form_PID#
	 </select>

	 <select id="selectbasdata"  resultClass="java.util.HashMap">
	    select t.bastime,(3600/t.pertime) pertime,t.bascls,t.addpertime from carbasdata t  
	 </select>
    <select id="updatecartime" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	   update  updatecartime set t.bastime=#form_bastime#,t.pertime=#form_pertime#,t.bascls=#form_bascls#,t.addpertime=#form_addpertime#  from carbasdata t 
     </select>
</sqlMap>

